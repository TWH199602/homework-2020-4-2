# 作业1
#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#include <string.h>

int duplicate(char* s, int n) {
    for (int i = 0; i < n; i++) {
        if (s[i] == s[n]) {
            return 1;
        }
    }
    return 0;
}

int find_max_substring(char* s) {
    
    int i;
    int len = (int)strlen(s);
    if (len == 1)
        return 1;
    for (i = 1; i < len; i++) {
        if (duplicate(s, i))
            break;
    }
    return 0;
    
int lengthOfLongesSubString(char * s) {
    
    int max = 0;
    
    unsigned int n = (unsigned int)strLen(s);
    
    for (int i = 0; i < n; i++) {
        
        int current_len = find_max_substring(s + i);
        
        if (current_len > max) {
            
            max = current_len;
            
        }
        
    }
    return max;
}
    
int main(void)
    
{
        
    char *s = malloc(100);
        
    while (1) {
            
        printf("input string:");
            
        scanf("%s", s);
            
        printf("max is %d\n", lenthOfLongestSubstring(s));
            
    }
    return 0;
}


# 作业2

#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#include <string.h>

int singleNumber(int* nums, int numsSize) {
    
    int result = 0;
    
    for (int i = 0; i < numsSize; i++) {
        
        result = result ^ nums[i];
        
    }
    
    return result;
    
}
